<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\WirelessModule_APP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\WirelessModule_APP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Mon Mar 27 15:53:47 2023
<BR><P>
<H3>Maximum Stack Usage =        608 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EXTI4_15_IRQHandler &rArr; Wl_RxDataProc &rArr; SendWirelesstData &rArr; InsUsartTrsQueue &rArr; Crc16UsartReceiveChick
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[16]">ADC_CMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">ADC_CMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC_CMP_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from gd32f1x0_it.o(i.BusFault_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[2f]">CAN0_RX0_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[30]">CAN0_RX1_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[31]">CAN0_SCE_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[2e]">CAN0_TX_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[36]">CAN1_RX0_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[37]">CAN1_RX1_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[38]">CAN1_SCE_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[35]">CAN1_TX_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[26]">CEC_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[13]">DMA_Channel0_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[14]">DMA_Channel1_2_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[15]">DMA_Channel3_4_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[33]">DMA_Channel5_6_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gd32f1x0_it.o(i.DebugMon_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[f]">EXTI0_1_IRQHandler</a> from rfid_cc1101.o(i.EXTI0_1_IRQHandler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[10]">EXTI2_3_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[11]">EXTI4_15_IRQHandler</a> from rfid_cc1101.o(i.EXTI4_15_IRQHandler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[d]">FMC_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32f1x0_it.o(i.HardFault_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[27]">I2C0_ER_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[20]">I2C0_EV_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[28]">I2C1_ER_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[21]">I2C1_EV_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[2a]">I2C2_ER_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[29]">I2C2_EV_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gd32f1x0_it.o(i.MemManage_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32f1x0_it.o(i.NMI_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gd32f1x0_it.o(i.PendSV_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[e]">RCU_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[32]">SLCD_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[22]">SPI0_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[23]">SPI1_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[34]">SPI2_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gd32f1x0_it.o(i.SVC_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gd32f1x0_it.o(i.SysTick_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[3a]">SystemInit</a> from system_gd32f1x0.o(i.SystemInit) referenced from startup_gd32f1x0.o(.text)
 <LI><a href="#[17]">TIMER0_BRK_UP_TRG_COM_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[18]">TIMER0_Channel_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[1c]">TIMER13_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[1d]">TIMER14_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[1e]">TIMER15_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[1f]">TIMER16_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[19]">TIMER1_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[1a]">TIMER2_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[1b]">TIMER5_DAC_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[12]">TSI_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[24]">USART0_IRQHandler</a> from usart.o(i.USART0_IRQHandler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[25]">USART1_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[2d]">USBDWakeUp_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[2c]">USBD_HP_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[2b]">USBD_LP_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gd32f1x0_it.o(i.UsageFault_Handler) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32f1x0.o(.text) referenced from startup_gd32f1x0.o(RESET)
 <LI><a href="#[3b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32f1x0.o(.text)
 <LI><a href="#[39]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(.text)
</UL>
<P><STRONG><a name="[9c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[43]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[9d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[9e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[a1]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[a2]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ADC_CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>CAN0_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA_Channel1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA_Channel5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RCU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIMER0_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIMER15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIMER16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER5_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>USBDWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USBD_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USBD_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f1x0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[a3]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_GetFrame
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWirelesstData
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsUsartTrsQueue
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8InFlashWriteBuf
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResponseData
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WL_ReceiveData
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8InFlashWriteBuf
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsUsartTrsQueue
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWirelesstData
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_fmul</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>

<P><STRONG><a name="[a9]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[3d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f1x0_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>Crc16UsartReceiveChick</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usart.o(i.Crc16UsartReceiveChick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Crc16UsartReceiveChick
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsUsartTrsQueue
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f1x0_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, rfid_cc1101.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = EXTI0_1_IRQHandler &rArr; RfidReadStatusReg &rArr; SpiMcuRead &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadStatusReg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 192 bytes, Stack size 80 bytes, rfid_cc1101.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = EXTI4_15_IRQHandler &rArr; Wl_RxDataProc &rArr; SendWirelesstData &rArr; InsUsartTrsQueue &rArr; Crc16UsartReceiveChick
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadFifoProc
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>GetRfidCurStatus</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rfid_driver.o(i.GetRfidCurStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetRfidCurStatus &rArr; RfidGetTxStatus &rArr; RfidStrobe &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGetTxStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f1x0_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f1x0_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f1x0_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>NVIC_DeInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, iapupdate.o(i.NVIC_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vIapJumpToApp
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f1x0_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>RFID_GetFrame</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, rfid_cc1101.o(i.RFID_GetFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RFID_GetFrame &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WL_ReceiveData
</UL>

<P><STRONG><a name="[50]"></a>RFID_HarewreInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, rfid_cc1101.o(i.RFID_HarewreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = RFID_HarewreInit &rArr; RfidConfig &rArr; RfidWriteReg &rArr; RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidConfig
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidChipReset
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidWriteReg
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_Init
</UL>

<P><STRONG><a name="[55]"></a>RFID_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rfid_driver.o(i.RFID_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RFID_Init &rArr; RFID_HarewreInit &rArr; RfidConfig &rArr; RfidWriteReg &rArr; RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRxMode
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_HarewreInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidWriteReg
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGDOxIntInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
</UL>

<P><STRONG><a name="[51]"></a>RfidChipReset</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rfid_cc1101.o(i.RfidChipReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RfidChipReset &rArr; RfidStrobe &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiResetChipSingle
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_HarewreInit
</UL>

<P><STRONG><a name="[53]"></a>RfidConfig</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, rfid_cc1101.o(i.RfidConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = RfidConfig &rArr; RfidWriteReg &rArr; RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidWriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_HarewreInit
</UL>

<P><STRONG><a name="[57]"></a>RfidGDOxIntInit</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rfid_driver.o(i.RfidGDOxIntInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RfidGDOxIntInit &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;syscfg_exti_line_config
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_Init
</UL>

<P><STRONG><a name="[4c]"></a>RfidGetTxStatus</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rfid_cc1101.o(i.RfidGetTxStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RfidGetTxStatus &rArr; RfidStrobe &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRfidCurStatus
</UL>

<P><STRONG><a name="[5f]"></a>RfidReadFifo</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, rfid_cc1101.o(i.RfidReadFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = RfidReadFifo &rArr; SpiMcuRead &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuRead
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadFifoProc
</UL>

<P><STRONG><a name="[48]"></a>RfidReadFifoProc</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, rfid_cc1101.o(i.RfidReadFifoProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RfidReadFifoProc &rArr; SetRxMode &rArr; RfidRxRegInit &rArr; RfidWriteReg &rArr; RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRxMode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadFifo
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[46]"></a>RfidReadStatusReg</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, rfid_cc1101.o(i.RfidReadStatusReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = RfidReadStatusReg &rArr; SpiMcuRead &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuRead
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRxMode
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>RfidRxRegInit</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, rfid_cc1101.o(i.RfidRxRegInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RfidRxRegInit &rArr; RfidWriteReg &rArr; RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidWriteReg
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRxMode
</UL>

<P><STRONG><a name="[62]"></a>RfidSpiConfig</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, rfid_driver.o(i.RfidSpiConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RfidSpiConfig &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_options_set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_mode_set
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_af_set
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_struct_para_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_enable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_crc_polynomial_set
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiInit
</UL>

<P><STRONG><a name="[56]"></a>RfidSpiInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rfid_driver.o(i.RfidSpiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RfidSpiInit &rArr; RfidSpiConfig &rArr; gpio_output_options_set
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_Init
</UL>

<P><STRONG><a name="[6a]"></a>RfidSpiWrite</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rfid_cc1101.o(i.RfidSpiWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidWriteReg
</UL>

<P><STRONG><a name="[47]"></a>RfidStrobe</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, rfid_cc1101.o(i.RfidStrobe))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RfidStrobe &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitGPIOReset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRxMode
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadFifoProc
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGetTxStatus
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidChipReset
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>RfidWriteReg</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, rfid_cc1101.o(i.RfidWriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RfidWriteReg &rArr; RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidRxRegInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_HarewreInit
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f1x0_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>SendResponseData</STRONG> (Thumb, 48 bytes, Stack size 160 bytes, usartapp.o(i.SendResponseData))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SendResponseData &rArr; InsUsartTrsQueue &rArr; Crc16UsartReceiveChick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsUsartTrsQueue
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[72]"></a>SendWirelesstData</STRONG> (Thumb, 60 bytes, Stack size 160 bytes, usartapp.o(i.SendWirelesstData))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = SendWirelesstData &rArr; InsUsartTrsQueue &rArr; Crc16UsartReceiveChick
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InsUsartTrsQueue
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
</UL>

<P><STRONG><a name="[74]"></a>SetRfidSRX</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, rfid_driver.o(i.SetRfidSRX))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = SetRfidSRX &rArr; SetRxMode &rArr; RfidRxRegInit &rArr; RfidWriteReg &rArr; RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRxMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
</UL>

<P><STRONG><a name="[58]"></a>SetRxMode</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rfid_cc1101.o(i.SetRxMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SetRxMode &rArr; RfidRxRegInit &rArr; RfidWriteReg &rArr; RfidSpiWrite &rArr; SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidRxRegInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadStatusReg
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadFifoProc
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRfidSRX
</UL>

<P><STRONG><a name="[60]"></a>SpiMcuRead</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, rfid_cc1101.o(i.SpiMcuRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SpiMcuRead &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitGPIOReset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadStatusReg
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadFifo
</UL>

<P><STRONG><a name="[6b]"></a>SpiMcuWrite</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, rfid_cc1101.o(i.SpiMcuWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SpiMcuWrite &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitGPIOReset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiWrite
</UL>

<P><STRONG><a name="[59]"></a>SpiResetChipSingle</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, rfid_cc1101.o(i.SpiResetChipSingle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SpiResetChipSingle &rArr; delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1us
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidChipReset
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32f1x0_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SystemInit</STRONG> (Thumb, 204 bytes, Stack size 8 bytes, system_gd32f1x0.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(.text)
</UL>
<P><STRONG><a name="[24]"></a>USART0_IRQHandler</STRONG> (Thumb, 292 bytes, Stack size 272 bytes, usart.o(i.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = USART0_IRQHandler &rArr; SendResponseData &rArr; InsUsartTrsQueue &rArr; Crc16UsartReceiveChick
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_transfer_number_config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_memory_address_config
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_enable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_channel_disable
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResponseData
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc16UsartReceiveChick
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>UpdateVersion</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, main.o(i.UpdateVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UpdateVersion &rArr; u8IapReadBuf &rArr; u8InFlashReadBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8IapReadBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f1x0_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f1x0.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>WL_ReceiveData</STRONG> (Thumb, 86 bytes, Stack size 88 bytes, rfid_driver.o(i.WL_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = WL_ReceiveData &rArr; RFID_GetFrame &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_GetFrame
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wl_RxDataProc
</UL>

<P><STRONG><a name="[6d]"></a>WaitGPIOReset</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, rfid_cc1101.o(i.WaitGPIOReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WaitGPIOReset
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_output_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuWrite
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
</UL>

<P><STRONG><a name="[4a]"></a>Wl_RxDataProc</STRONG> (Thumb, 308 bytes, Stack size 336 bytes, wireless.o(i.Wl_RxDataProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = Wl_RxDataProc &rArr; SendWirelesstData &rArr; InsUsartTrsQueue &rArr; Crc16UsartReceiveChick
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWirelesstData
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WL_ReceiveData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRfidSRX
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRfidCurStatus
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[ac]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[ad]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[ae]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[52]"></a>delay_1us</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, systick.o(i.delay_1us))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delay_1us &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiResetChipSingle
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuWrite
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidRxRegInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidReadFifoProc
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidChipReset
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RFID_HarewreInit
</UL>

<P><STRONG><a name="[75]"></a>delay_decrement</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, systick.o(i.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[7b]"></a>dma_channel_disable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32f1x0_dma.o(i.dma_channel_disable))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[7e]"></a>dma_channel_enable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32f1x0_dma.o(i.dma_channel_enable))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>dma_memory_address_config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f1x0_dma.o(i.dma_memory_address_config))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>dma_transfer_number_config</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32f1x0_dma.o(i.dma_transfer_number_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dma_transfer_number_config
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>exti_init</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, gd32f1x0_exti.o(i.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGDOxIntInit
</UL>

<P><STRONG><a name="[45]"></a>exti_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f1x0_exti.o(i.exti_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGDOxIntInit
</UL>

<P><STRONG><a name="[44]"></a>exti_interrupt_flag_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f1x0_exti.o(i.exti_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>fmc_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f1x0_fmc.o(i.fmc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInFlashErasePage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8InFlashWriteBuf
</UL>

<P><STRONG><a name="[99]"></a>fmc_lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f1x0_fmc.o(i.fmc_lock))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInFlashErasePage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8InFlashWriteBuf
</UL>

<P><STRONG><a name="[86]"></a>fmc_page_erase</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gd32f1x0_fmc.o(i.fmc_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fmc_page_erase &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInFlashErasePage
</UL>

<P><STRONG><a name="[97]"></a>fmc_unlock</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f1x0_fmc.o(i.fmc_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInFlashErasePage
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8InFlashWriteBuf
</UL>

<P><STRONG><a name="[89]"></a>fmc_word_program</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gd32f1x0_fmc.o(i.fmc_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fmc_word_program &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8InFlashWriteBuf
</UL>

<P><STRONG><a name="[63]"></a>gpio_af_set</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, gd32f1x0_gpio.o(i.gpio_af_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_af_set
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
</UL>

<P><STRONG><a name="[6c]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f1x0_gpio.o(i.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiResetChipSingle
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuWrite
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
</UL>

<P><STRONG><a name="[6f]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f1x0_gpio.o(i.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiResetChipSingle
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuWrite
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
</UL>

<P><STRONG><a name="[5b]"></a>gpio_mode_set</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, gd32f1x0_gpio.o(i.gpio_mode_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_mode_set
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGDOxIntInit
</UL>

<P><STRONG><a name="[83]"></a>gpio_output_bit_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f1x0_gpio.o(i.gpio_output_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitGPIOReset
</UL>

<P><STRONG><a name="[64]"></a>gpio_output_options_set</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, gd32f1x0_gpio.o(i.gpio_output_options_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_output_options_set
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
</UL>

<P><STRONG><a name="[39]"></a>main</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; upgrade &rArr; u8IapWriteBuf &rArr; u8InFlashWriteBuf &rArr; fmc_word_program &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5c]"></a>nvic_irq_enable</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, gd32f1x0_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGDOxIntInit
</UL>

<P><STRONG><a name="[8b]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f1x0_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>

<P><STRONG><a name="[77]"></a>nvic_vector_table_set</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f1x0_misc.o(i.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[5a]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f1x0_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGDOxIntInit
</UL>

<P><STRONG><a name="[8d]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f1x0_rcu.o(i.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>

<P><STRONG><a name="[8c]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f1x0_rcu.o(i.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_deinit
</UL>

<P><STRONG><a name="[68]"></a>spi_crc_polynomial_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f1x0_spi.o(i.spi_crc_polynomial_set))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
</UL>

<P><STRONG><a name="[69]"></a>spi_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f1x0_spi.o(i.spi_enable))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
</UL>

<P><STRONG><a name="[90]"></a>spi_i2s_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f1x0_spi.o(i.spi_i2s_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
</UL>

<P><STRONG><a name="[8f]"></a>spi_i2s_data_transmit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f1x0_spi.o(i.spi_i2s_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
</UL>

<P><STRONG><a name="[65]"></a>spi_i2s_deinit</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gd32f1x0_spi.o(i.spi_i2s_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_i2s_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
</UL>

<P><STRONG><a name="[8e]"></a>spi_i2s_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f1x0_spi.o(i.spi_i2s_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_write
</UL>

<P><STRONG><a name="[67]"></a>spi_init</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, gd32f1x0_spi.o(i.spi_init))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
</UL>

<P><STRONG><a name="[66]"></a>spi_struct_para_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f1x0_spi.o(i.spi_struct_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidSpiConfig
</UL>

<P><STRONG><a name="[6e]"></a>spi_write</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, rfid_cc1101.o(i.spi_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_write
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_flag_get
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_transmit
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_i2s_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuWrite
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiMcuRead
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidStrobe
</UL>

<P><STRONG><a name="[5d]"></a>syscfg_exti_line_config</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, gd32f1x0_syscfg.o(i.syscfg_exti_line_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = syscfg_exti_line_config
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RfidGDOxIntInit
</UL>

<P><STRONG><a name="[92]"></a>u8IapEraserSector</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, iapupdate.o(i.u8IapEraserSector))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = u8IapEraserSector &rArr; vInFlashErasePage &rArr; fmc_page_erase &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vInFlashErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
</UL>

<P><STRONG><a name="[80]"></a>u8IapReadBuf</STRONG> (Thumb, 26 bytes, Stack size 20 bytes, iapupdate.o(i.u8IapReadBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = u8IapReadBuf &rArr; u8InFlashReadBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8InFlashReadBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateVersion
</UL>

<P><STRONG><a name="[95]"></a>u8IapWriteBuf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, iapupdate.o(i.u8IapWriteBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = u8IapWriteBuf &rArr; u8InFlashWriteBuf &rArr; fmc_word_program &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8InFlashWriteBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
</UL>

<P><STRONG><a name="[94]"></a>u8InFlashReadBuf</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, iapupdate.o(i.u8InFlashReadBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = u8InFlashReadBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8IapReadBuf
</UL>

<P><STRONG><a name="[96]"></a>u8InFlashWriteBuf</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, iapupdate.o(i.u8InFlashWriteBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = u8InFlashWriteBuf &rArr; fmc_word_program &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8IapWriteBuf
</UL>

<P><STRONG><a name="[8a]"></a>upgrade</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, main.o(i.upgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = upgrade &rArr; u8IapWriteBuf &rArr; u8InFlashWriteBuf &rArr; fmc_word_program &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vIapJumpToApp
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8IapWriteBuf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8IapReadBuf
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8IapEraserSector
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>usart_data_receive</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f1x0_usart.o(i.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[78]"></a>usart_flag_get</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gd32f1x0_usart.o(i.usart_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[79]"></a>usart_interrupt_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gd32f1x0_usart.o(i.usart_interrupt_flag_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[9a]"></a>vIapJumpToApp</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, iapupdate.o(i.vIapJumpToApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vIapJumpToApp
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade
</UL>

<P><STRONG><a name="[93]"></a>vInFlashErasePage</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, iapupdate.o(i.vInFlashErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vInFlashErasePage &rArr; fmc_page_erase &rArr; fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;u8IapEraserSector
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[4d]"></a>InsUsartTrsQueue</STRONG> (Thumb, 282 bytes, Stack size 16 bytes, usartapp.o(i.InsUsartTrsQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = InsUsartTrsQueue &rArr; Crc16UsartReceiveChick
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc16UsartReceiveChick
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendWirelesstData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResponseData
</UL>

<P><STRONG><a name="[91]"></a>system_clock_72m_hxtal</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, system_gd32f1x0.o(i.system_clock_72m_hxtal))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[76]"></a>system_clock_config</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_gd32f1x0.o(i.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_clock_config
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_72m_hxtal
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[87]"></a>fmc_ready_wait</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gd32f1x0_fmc.o(i.fmc_ready_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fmc_ready_wait
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
</UL>

<P><STRONG><a name="[88]"></a>fmc_state_get</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gd32f1x0_fmc.o(i.fmc_state_get))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_ready_wait
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
